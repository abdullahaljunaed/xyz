
# Required libraries
import matplotlib.pyplot as plt
from PIL import Image, ImageDraw, ImageFont
import numpy as np

# Example plant data (time vs. rainfall, temperature, humidity)
time_range = np.array([1, 2, 3, 4, 5])  # 5 days or 5 time points
rainfall = np.array([20, 35, 30, 25, 40])  # in mm
temperature = np.array([22, 24, 20, 23, 25])  # in °C
humidity = np.array([75, 80, 70, 72, 85])  # in %

# Step 1: Image Processing (Loading and annotating the image)
def process_plant_image(image_path, text):
    # Load the plant image
    img = Image.open(image_path)
    
    # Create a drawing object
    draw = ImageDraw.Draw(img)
    
    # Optional: Load a font
    # font = ImageFont.truetype("arial.ttf", 24)  # You can specify a font if needed

    # Add some text (information about the plant or data summary)
    draw.text((10, 10), text, fill="white")  # Use white color for the text
    
    # Show the image
    img.show()
    
    # Optionally save the image
    img.save("annotated_plant_image.jpg")
    
# Step 2: Data Visualization (Creating a graph)
def create_graph():
    # Create a figure and axes
    fig, ax1 = plt.subplots()

    # Plot rainfall data on the first axis
    ax1.set_xlabel('Time (days)')
    ax1.set_ylabel('Rainfall (mm)', color='blue')
    ax1.plot(time_range, rainfall, color='blue', marker='o', label="Rainfall")
    ax1.tick_params(axis='y', labelcolor='blue')

    # Create a second axis for temperature and humidity
    ax2 = ax1.twinx()  # Instantiate a second axis sharing the same x-axis
    ax2.set_ylabel('Temperature (°C) and Humidity (%)', color='red')
    ax2.plot(time_range, temperature, color='red', marker='s', label="Temperature")
    ax2.plot(time_range, humidity, color='green', marker='^', label="Humidity")
    ax2.tick_params(axis='y', labelcolor='red')

    # Add legends
    ax1.legend(loc="upper left")
    ax2.legend(loc="upper right")
    
    # Add a title
    plt.title('Plant Environment Data Over Time')

    # Show the plot
    plt.show()

# Sample usage:
# Path to your plant image (replace with the actual image file path)
plant_image_path = 'plant.jpg'
process_plant_image(plant_image_path, text="Plant Growth Analysis")

# Create the graph
create_graph()




// Python code that visualizes drought conditions over the years

import matplotlib.pyplot as plt
import numpy as np

# Years from 2015 to 2024
years = np.arange(2015, 2025)

# Sample data for rainfall, temperature rise, and soil moisture levels
rainfall_data = [1100, 1050, 1000, 980, 950, 930, 900, 850, 800, 780]  # Rainfall in mm
temperature_rise_data = [0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55]  # Temperature rise in °C
soil_moisture_data = [80, 78, 75, 72, 70, 68, 65, 63, 60, 58]  # Soil moisture as percentage

# Create the plot for rainfall
plt.figure(figsize=(12, 8))

# Subplot 1: Rainfall Data
plt.subplot(3, 1, 1)
plt.plot(years, rainfall_data, label='Annual Rainfall (mm)', marker='o', linestyle='-', color='blue')
plt.title('Drought Analysis: 2015-2024', fontsize=16)
plt.ylabel('Rainfall (mm)', fontsize=12)
plt.grid(True)
plt.legend()

# Subplot 2: Temperature Rise Data
plt.subplot(3, 1, 2)
plt.plot(years, temperature_rise_data, label='Temperature Rise (°C)', marker='o', linestyle='-', color='red')
plt.ylabel('Temperature Rise (°C)', fontsize=12)
plt.grid(True)
plt.legend()

# Subplot 3: Soil Moisture Data
plt.subplot(3, 1, 3)
plt.plot(years, soil_moisture_data, label='Soil Moisture (%)', marker='o', linestyle='-', color='green')
plt.xlabel('Year', fontsize=12)
plt.ylabel('Soil Moisture (%)', fontsize=12)
plt.grid(True)
plt.legend()

# Display the complete plot
plt.tight_layout()
plt.show()




// Python code to generate the updated graph comparing the Bangladesh flood intensity data

import matplotlib.pyplot as plt

# Updated Dates for the data points
dates = ['1 Aug', '15 Aug', '31 Aug', '15 Sep', '30 Sep', '3 Oct']

# Updated NASA Flood Intensity data
nasa_data = [5, 220, 5, 3, 10, 10]

# Updated AgroX Flood Intensity data
agrox_data = [6, 215, 5, 4, 10, 15]

# Create the plot
plt.figure(figsize=(10, 6))
plt.plot(dates, nasa_data, label='NASA Data', marker='o', linestyle='-', color='blue')
plt.plot(dates, agrox_data, label='AgroX Data', marker='o', linestyle='--', color='green')

# Add titles and labels
plt.title('Bangladesh Flood Intensity Comparison (NASA vs AgroX)', fontsize=14)
plt.xlabel('Date', fontsize=12)
plt.ylabel('Flood Intensity (mm)', fontsize=12)

# Add a legend
plt.legend()

# Display the plot
plt.grid(True)
plt.show()




// Python code that visualizes  monthly average Temperature conditions over the years

import matplotlib.pyplot as plt

# Sample temperature data (in Celsius) for a hypothetical city for each month
months = ['January', 'February', 'March', 'April', 'May', 'June', 
          'July', 'August', 'September', 'October', 'November', 'December']

# Monthly average temperatures
temperature_data = [12, 14, 18, 22, 26, 30, 32, 31, 28, 24, 18, 14]

# Create the plot
plt.figure(figsize=(10, 6))
plt.plot(months, temperature_data, label='Average Temperature', marker='o', linestyle='-', color='red')

# Add titles and labels
plt.title('Monthly Average Temperature', fontsize=14)
plt.xlabel('Month', fontsize=12)
plt.ylabel('Temperature (°C)', fontsize=12)

# Add a legend
plt.legend()

# Display the plot
plt.grid(True)
plt.xticks(rotation=45)  # Rotate x-axis labels for better readability
plt.show()




